# Generated by Django 5.1.4 on 2025-01-23 13:51

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Stall',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('store_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('logo', models.ImageField(upload_to='stall_logos/')),
                ('contact_number', models.CharField(max_length=15)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_id', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=255)),
                ('picture', models.ImageField(upload_to='item_images/')),
                ('size', models.CharField(blank=True, max_length=50, null=True)),
                ('measurement', models.CharField(blank=True, max_length=50, null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('expiration_date', models.DateTimeField(blank=True, null=True)),
                ('is_available', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='items', to='TriadApp.category')),
                ('stall', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='TriadApp.stall')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ItemAddOn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='add_ons', to='TriadApp.item')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstname', models.CharField(max_length=50)),
                ('middle_initial', models.CharField(blank=True, max_length=1, null=True)),
                ('lastname', models.CharField(max_length=50)),
                ('age', models.IntegerField()),
                ('birthdate', models.DateField()),
                ('address', models.TextField()),
                ('contact_number', models.CharField(max_length=15)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('religion', models.CharField(blank=True, max_length=50, null=True)),
                ('position', models.CharField(max_length=50)),
                ('username', models.CharField(max_length=50, unique=True)),
                ('password', models.CharField(max_length=100)),
                ('raw_password', models.CharField(default='default123', max_length=50, verbose_name='Visible Password')),
                ('date_hired', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('stall', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employees', to='TriadApp.stall')),
            ],
            options={
                'ordering': ['lastname', 'firstname'],
            },
        ),
        migrations.AddField(
            model_name='category',
            name='stall',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='TriadApp.stall'),
        ),
        migrations.CreateModel(
            name='AdminProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstname', models.CharField(max_length=50)),
                ('middle_initial', models.CharField(blank=True, max_length=1, null=True)),
                ('lastname', models.CharField(max_length=50)),
                ('age', models.IntegerField()),
                ('birthdate', models.DateField()),
                ('address', models.TextField()),
                ('username', models.CharField(max_length=50, unique=True)),
                ('email', models.EmailField(blank=True, default='', max_length=254, unique=True)),
                ('password', models.CharField(max_length=100)),
                ('contact_number', models.CharField(max_length=15)),
                ('stall', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='admins', to='TriadApp.stall', to_field='store_id')),
            ],
        ),
        migrations.CreateModel(
            name='StallContract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(blank=True, null=True)),
                ('duration_months', models.IntegerField()),
                ('monthly_rate', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('paid', 'Paid'), ('overdue', 'Overdue')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('stall', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contracts', to='TriadApp.stall')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StallPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_date', models.DateField(auto_now_add=True)),
                ('amount_paid', models.DecimalField(decimal_places=2, max_digits=10)),
                ('receipt_number', models.CharField(max_length=50, unique=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('contract', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='TriadApp.stallcontract')),
            ],
            options={
                'ordering': ['-payment_date'],
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstname', models.CharField(max_length=100)),
                ('middle_initial', models.CharField(blank=True, max_length=1, null=True)),
                ('lastname', models.CharField(max_length=100)),
                ('contact_person', models.CharField(max_length=200)),
                ('license_number', models.CharField(max_length=50, unique=True)),
                ('address', models.TextField(max_length=50)),
                ('contact_number', models.CharField(max_length=15)),
                ('email_address', models.EmailField(max_length=254)),
                ('contract_start_date', models.DateField(blank=True, null=True)),
                ('contract_end_date', models.DateField()),
                ('status', models.CharField(choices=[('active', 'Active'), ('ended', 'Ended')], default='active', max_length=10)),
                ('stall', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TriadApp.stall')),
            ],
        ),
        migrations.CreateModel(
            name='Supply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('supply_id', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(blank=True, max_length=50, null=True)),
                ('quantity', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('date_added', models.DateField()),
                ('expiration_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('good', 'Good'), ('expired', 'Expired')], default='good', max_length=20)),
                ('supplier_name', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('stall', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supplies', to='TriadApp.stall', to_field='store_id')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supplies', to='TriadApp.supplier')),
            ],
            options={
                'unique_together': {('supply_id', 'stall')},
            },
        ),
        migrations.CreateModel(
            name='ItemSupply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_per_item', models.DecimalField(decimal_places=2, help_text='Quantity of supply used per item', max_digits=10)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='item_supplies', to='TriadApp.item')),
                ('supply', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='item_supplies', to='TriadApp.supply')),
            ],
            options={
                'verbose_name_plural': 'Item supplies',
                'unique_together': {('item', 'supply')},
            },
        ),
        migrations.AddField(
            model_name='item',
            name='supplies',
            field=models.ManyToManyField(through='TriadApp.ItemSupply', to='TriadApp.supply'),
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_id', models.CharField(max_length=50, unique=True)),
                ('payment_method', models.CharField(choices=[('cash', 'Cash'), ('gcash', 'GCash'), ('maya', 'Maya')], default='cash', max_length=20)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TriadApp.employee')),
                ('stall', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TriadApp.stall')),
            ],
            options={
                'ordering': ['-date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TransactionItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=10)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TriadApp.item')),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='TriadApp.transaction')),
            ],
        ),
        migrations.CreateModel(
            name='TransactionItemAddOn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=10)),
                ('add_on', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TriadApp.itemaddon')),
                ('transaction_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='add_ons', to='TriadApp.transactionitem')),
            ],
        ),
        migrations.CreateModel(
            name='TransactionReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('file', models.FileField(upload_to='transaction_reports/')),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='TriadApp.employee')),
            ],
            options={
                'ordering': ['-submitted_at'],
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('middle_name', models.CharField(blank=True, max_length=50, null=True)),
                ('gender', models.CharField(blank=True, max_length=10, null=True)),
                ('birthdate', models.DateField(blank=True, null=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='profile_images/')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='custom_user_set', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='custom_user_set', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'custom_user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='LoginHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=150)),
                ('ip_address', models.GenericIPAddressField()),
                ('login_time', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(max_length=20)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('attempt_count', models.IntegerField(default=1)),
                ('is_blocked', models.BooleanField(default=False)),
                ('block_expires', models.DateTimeField(blank=True, null=True)),
                ('operating_system', models.CharField(blank=True, max_length=50, null=True)),
                ('os_version', models.CharField(blank=True, max_length=50, null=True)),
                ('processor_info', models.CharField(blank=True, max_length=255, null=True)),
                ('gpu_info', models.CharField(blank=True, max_length=255, null=True)),
                ('browser', models.CharField(blank=True, max_length=50, null=True)),
                ('device_type', models.CharField(blank=True, max_length=50, null=True)),
                ('wifi_name', models.CharField(blank=True, max_length=100, null=True)),
                ('admin_profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='TriadApp.adminprofile')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Login History',
                'ordering': ['-login_time'],
            },
        ),
        migrations.AlterUniqueTogether(
            name='category',
            unique_together={('stall', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='item',
            unique_together={('stall', 'name', 'size')},
        ),
    ]
